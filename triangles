{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMV2UKp6NZHpCB7TUmwBHjz",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/ruthika5462/python-folders/blob/main/triangles\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##flodys triangle\n",
        "n =int(input(\"enter the no of rows:\"))\n",
        "num = 1\n",
        "for row in range(1,n+1):\n",
        "  for col in range (1,row+1):\n",
        "    print(num,end=\" \")\n",
        "    num=num+1\n",
        "  print()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "J4pKv9HvR_vJ",
        "outputId": "fc35433b-6827-4298-d494-75b408e7f854"
      },
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the no of rows:6\n",
            "1 \n",
            "2 3 \n",
            "4 5 6 \n",
            "7 8 9 10 \n",
            "11 12 13 14 15 \n",
            "16 17 18 19 20 21 \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for row in range(6):\n",
        "  for col in range(7):\n",
        "      if(row==0 and col%3!=0)or(row==1 and col%3==0) or (row-col==2) or (row+col==8):\n",
        "        print(\"*\",end=\"\")\n",
        "      else:\n",
        "        print(end=\" \")\n",
        "  print()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "i6MhC-4oT58o",
        "outputId": "0759d834-7674-4638-e2ed-b686d94bf3a0"
      },
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            " ** ** \n",
            "*  *  *\n",
            "*     *\n",
            " *   * \n",
            "  * *  \n",
            "   *   \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for row in range(1,5):\n",
        "  for col in range(1,8):\n",
        "     if row==4 or  row+col==5 or row-col==3:\n",
        "      print(\"*\",end=\"\")\n",
        "     else:\n",
        "      print(end=\" \")\n",
        "  print()\n",
        "    "
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "15IAdbBJX3t1",
        "outputId": "bd467609-5ee5-44a9-eebb-e87a6e407548"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   *   \n",
            "  *    \n",
            " *     \n",
            "*******\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n=int(input(\"enter the no of rows:\"))\n",
        "     for row in range(1,n+1):\n",
        "       for col in range(1,n+1):\n",
        "        if row==n or row+col==n+1 or row-col==n-1:\n",
        "          print(\"*\",end=\"\")\n",
        "        else:\n",
        "          print(end=\" \")\n",
        "       print()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 133
        },
        "id": "3kw0AdXYaL4j",
        "outputId": "37a1906a-eec7-46ac-82f4-8ba4fcbb54c4"
      },
      "execution_count": 10,
      "outputs": [
        {
          "output_type": "error",
          "ename": "IndentationError",
          "evalue": "ignored",
          "traceback": [
            "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-10-18f2783c0303>\"\u001b[0;36m, line \u001b[0;32m2\u001b[0m\n\u001b[0;31m    for row in range(1,n+1):\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the number of rows:\"))\n",
        "for i in range(num):\n",
        "  for j in range(num):\n",
        "    print(\"$\",end=\" \")\n",
        "  print()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tjLNkUB8cVco",
        "outputId": "8f968bd4-d00e-4d45-c4fd-7dbf748968d2"
      },
      "execution_count": 12,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the number of rows:8\n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n",
            "$ $ $ $ $ $ $ $ \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the no of rows:\"))\n",
        "for i in range(1,num+1):\n",
        "    print(\" \" *(num-i)+\"* \"*i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JKl9FAgIdRMc",
        "outputId": "6563667f-cabf-4234-ffcf-217b50018159"
      },
      "execution_count": 14,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the no of rows:6\n",
            "     * \n",
            "    * * \n",
            "   * * * \n",
            "  * * * * \n",
            " * * * * * \n",
            "* * * * * * \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the no of rows:\"))\n",
        "for i in range(1,num+1):\n",
        "  print(\"  \" *(num-i)+\"* \"*i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "b-4yowIQd9t6",
        "outputId": "2578ddcc-0640-4674-e841-875420dfb329"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the no of rows:6\n",
            "          * \n",
            "        * * \n",
            "      * * * \n",
            "    * * * * \n",
            "  * * * * * \n",
            "* * * * * * \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "num=int(input(\"enter the no of rows:\"))\n",
        "for i in range(1,num+1):\n",
        "  print(\" \"*(num-i)+\"*\"*i)\n",
        "for i in range(num-1,0,-1):\n",
        "  print(\"\"*(num-i)+\"*\"*i)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2wzxma0heYWg",
        "outputId": "9ccbedf9-0f17-4e2e-b854-e98a8ede44ef"
      },
      "execution_count": 25,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "enter the no of rows:6\n",
            "     *\n",
            "    **\n",
            "   ***\n",
            "  ****\n",
            " *****\n",
            "******\n",
            "*****\n",
            "****\n",
            "***\n",
            "**\n",
            "*\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "n=input(\"enter the no of rows:\")"
      ],
      "metadata": {
        "id": "2_EJIHeafZti"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}